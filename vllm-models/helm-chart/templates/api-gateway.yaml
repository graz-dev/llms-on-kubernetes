apiVersion: v1
kind: ConfigMap
metadata:
  name: vllm-api-gateway-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        lua_package_path "/usr/local/openresty/lualib/?.lua;;";
        
        upstream default_backend {
{{- range .Values.models }}
            server vllm-{{ .modelName }}:8080;
{{- end }}
        }

        map $model_name $backend_service {
{{- range .Values.models }}
            "{{ .modelName }}" "vllm-{{ .modelName }}:8080";
{{- end }}
            default "{{ (index .Values.models 0).modelName | printf "vllm-%s:8080" }}";
        }
        
        server {
            listen 8080;
            
            location = /v1/models {
                content_by_lua_block {
                    local cjson = require "cjson"
                    local models = {
                        object = "list",
                        data = {
{{- range .Values.models }}
                            {
                                id = "{{ .modelName }}",
                                object = "model",
                                created = os.time(),
                                owned_by = "vllm"
                            },
{{- end }}
                        }
                    }
                    
                    ngx.header.content_type = "application/json"
                    ngx.say(cjson.encode(models))
                }
            }
            
            location / {
                access_by_lua_block {
                    local cjson = require "cjson"
                    local model_name = ""
                    
                    -- Read request body
                    ngx.req.read_body()
                    local body = ngx.req.get_body_data()
                    
                    if body then
                        local success, json_data = pcall(cjson.decode, body)
                        if success and json_data and json_data.model then
                            model_name = json_data.model
                        end
                    end
                    
                    ngx.var.model_name = model_name
                }
                
                proxy_pass http://$backend_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                return 200 "OK";
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-api-gateway
  labels:
    app: vllm-api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vllm-api-gateway
  template:
    metadata:
      labels:
        app: vllm-api-gateway
    spec:
      containers:
      - name: nginx
        image: openresty/openresty:1.21.4.1-alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /usr/local/openresty/nginx/conf/nginx.conf
          subPath: nginx.conf
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: vllm-api-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-api-gateway
  labels:
    app: vllm-api-gateway
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: vllm-api-gateway